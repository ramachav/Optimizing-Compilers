;IR code
;PUSH   
;PUSHREGS   
;JSR FUNC_main  
;HALT   
;LABEL FUNC_main  
;LINK 5  
;READI $-1  
;READI $-2  
;READI $-3  
;READI $-4  
;READI $-5  
;STOREI 100 !T0 
;STOREI !T0 $-2 
;LABEL FOR_LOOP_START_1  
;STOREI 0 !T1 
;STOREI !T1 $-1 
;LABEL FOR_COND_1  
;STOREI $-2 !T2 
;GEI $-1 !T2 FOR_END_1
;STOREI 5 !T4 
;ADDI $-2 !T4 !T3
;STOREI !T3 $-3 
;MULI $-3 $-1 !T5
;STOREI 5 !T7 
;ADDI !T5 !T7 !T6
;STOREI !T6 $-4 
;STOREI 50 !T8 
;GEI $-1 !T8 ELSE_2
;STOREI 5 !T10 
;ADDI $-3 !T10 !T9
;STOREI !T9 $-5 
;JUMP END_IF_ELSE2  
;LABEL ELSE_2  
;STOREI 5 !T12 
;SUBI $-3 !T12 !T11
;STOREI !T11 $-5 
;LABEL END_IF_ELSE2  
;LABEL FOR_INCR_1  
;STOREI 1 !T14 
;ADDI $-1 !T14 !T13
;STOREI !T13 $-1 
;JUMP FOR_COND_1  
;LABEL FOR_END_1  
;LABEL FOR_LOOP_END_1  
;WRITEI $-1  
;WRITES newline  
;WRITEI $-2  
;WRITES newline  
;WRITEI $-3  
;WRITES newline  
;WRITEI $-4  
;WRITES newline  
;WRITEI $-5  
;WRITES newline  
;UNLINK   
;RET   
push  
push r0
push r1
push r2
push r3
jsr  FUNC_main
sys halt
label  FUNC_main
link  5
sys readi $-1 
sys readi $-2 
sys readi $-3 
sys readi $-4 
sys readi $-5 
move 100 r0
move r0 $-2
label  FOR_LOOP_START_1
move 0 r1
move r1 $-1
label  FOR_COND_1
move $-2 r2
cmpi  $-1 r2
jge  FOR_END_1
move 5 r4
move $-2 r3
addi r4 r3
move r3 $-3
move $-3 r5
muli $-1 r5
move 5 r7
move r5 r6
addi r7 r6
move r6 $-4
move 50 r8
cmpi  $-1 r8
jge  ELSE_2
move 5 r10
move $-3 r9
addi r10 r9
move r9 $-5
jmp  END_IF_ELSE2
label  ELSE_2
move 5 r12
move $-3 r11
subi r12 r11
move r11 $-5
label  END_IF_ELSE2
label  FOR_INCR_1
move 1 r14
move $-1 r13
addi r14 r13
move r13 $-1
jmp  FOR_COND_1
label  FOR_END_1
label  FOR_LOOP_END_1
sys writei $-1 
sys writes newline 
sys writei $-2 
sys writes newline 
sys writei $-3 
sys writes newline 
sys writei $-4 
sys writes newline 
sys writei $-5 
sys writes newline 
unlnk
ret
